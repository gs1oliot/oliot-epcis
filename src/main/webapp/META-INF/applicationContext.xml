<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:jaxws="http://cxf.apache.org/jaxws"
    xmlns:cxf="http://cxf.apache.org/core"
    xsi:schemaLocation="
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://cxf.apache.org/core
      http://cxf.apache.org/schemas/core.xsd
      http://cxf.apache.org/jaxws
      http://cxf.apache.org/schemas/jaxws.xsd">

  <!-- beans and configurations defined in the cxf jars -->
  <import resource="classpath:META-INF/cxf/cxf.xml" />
  <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
  <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

  <!-- post-processor which replaces placeholders like ${test} with values from property files -->
  <bean id="dataPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:application.properties</value>
      </list>
    </property>
  </bean>
  
  <bean id="applicationContextProvder" class="org.fosstrak.epcis.repository.ApplicationContextProvider"/>

  <!-- =========================================================== -->
  <!--  Database connection configuration                          -->
  <!-- =========================================================== -->

  <!-- data source configuration available via JNDI (in JEE environments) -->
  <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean" scope="singleton">
    <property name="jndiName" value="jdbc/EPCISDB" />
    <property name="resourceRef" value="true" />
  </bean>
  <!-- data source configuration (any environment) -->
  <!--
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName" value="${db.driver}"/>
    <property name="url" value="${db.url}"/>
    <property name="username" value="${db.username}"/>
    <property name="password" value="${db.password}"/>
  </bean>
  -->
 <bean id="CassandraBean" class="org.fosstrak.epcis.repository.CassandraResource" scope="singleton" destroy-method="cleanUp">
   <property name="keyspace" value="${keyspace}" />
   <property name="hosts" value="${hosts}" />
   <property name="username" value="user" />
   <property name="password" value="p@ss" />
 </bean>



  <!-- =========================================================== -->
  <!--  Service layer definitions                                  -->
  <!-- =========================================================== -->

  <bean id="queryOperationsModule" class="org.fosstrak.epcis.repository.query.QueryOperationsModule">
    <property name="dataSource" ref="dataSource" />
    <property name="cassandraResource" ref="CassandraBean" />
    <property name="serviceVersion" value="${service.version}" />
    <property name="maxQueryRows" value="${maxQueryResultRows}" />
    <property name="maxQueryTime" value="${maxQueryExecutionTime}" />
    <property name="triggerConditionSeconds" value="${trigger.condition.check.sec}" />
    <property name="triggerConditionMinutes" value="${trigger.condition.check.min}" />
    <property name="allowFiltering" value="${allowfiltering}" />
    <property name="servletContext">
      <bean class="org.springframework.web.context.support.ServletContextFactoryBean" />
    </property>
    <property name="backendCassandra">
      <bean class="org.fosstrak.epcis.repository.query.QueryOperationsBackendCassandra" />
    </property>
  </bean>
  <bean id="queryOperationsWebService" class="org.fosstrak.epcis.repository.query.QueryOperationsWebService">
    <constructor-arg><ref bean="queryOperationsModule" /></constructor-arg>
  </bean>

  <bean id="captureOperationsModule" class="org.fosstrak.epcis.repository.capture.CaptureOperationsModule">
    <property name="insertMissingVoc" value="${insertMissingVoc}" />
    <property name="epcisSchemaFile" value="${epcisSchemaFile}" />
    <property name="geoDiscoveryEnable" value="${geoDiscoveryEnable}" />
    <property name="geoDiscoveryURL" value="${geoDiscoveryURL}" />
    <property name="geoDiscoveryPORT" value="${geoDiscoveryPORT}" />
    <property name="epcisRepositoryURL" value="${epcisRepositoryURL}" />
  </bean>
  <!-- inject captureOperationsModule bean into servlet context, so the CaptureOperationsServlet can access it -->
  <bean class="org.springframework.web.context.support.ServletContextAttributeExporter">
    <property name="attributes">
      <map>
        <entry key="captureOperationsModule">
          <ref bean="captureOperationsModule" />
        </entry>
      </map>
    </property>
  </bean>
  <!-- inject CassandraResource bean into servlet context, so the CaptureOperationsServlet can access it -->
    <bean class="org.springframework.web.context.support.ServletContextAttributeExporter">
    <property name="attributes">
      <map>
        <entry key="CassandraBean">
          <ref bean="CassandraBean" />
        </entry>
      </map>
    </property>
  </bean>



  <!-- =========================================================== -->
  <!--  CXF (Web service) configuration                            -->
  <!-- =========================================================== -->

  <!-- publish the Web service endpoint and its implementing bean -->
  <jaxws:endpoint id="EpcisQueryEndpoint" implementor="#queryOperationsWebService" address="/" />
  <jaxws:endpoint id="EpcisQueryLocalEndpoint" implementor="#queryOperationsWebService" address="local://query" />
  
  <!-- register local transport -->
<!--   <bean class="org.apache.cxf.transport.local.LocalTransportFactory" lazy-init="false">
    <property name="transportIds">
      <list>
        <value>http://cxf.apache.org/transports/local</value>
        <value>http://schemas.xmlsoap.org/soap/http</value>
        <value>http://schemas.xmlsoap.org/wsdl/soap/http</value>
      </list>
    </property>
  </bean> -->

  <!-- configure logging of SOAP messages -->
  <cxf:bus>
    <cxf:features><cxf:logging /></cxf:features>
  </cxf:bus>

</beans>